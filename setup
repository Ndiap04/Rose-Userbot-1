#!/bin/bash

pprint (){
	cred='\033[0;31m'
	cgreen='\033[0;32m'
	cyellow='\033[0;33m'
	cblue='\033[0;34m'
	cpurple='\033[0;35m'
	eval "export color='$cpurple'"
	[ ! -z $2 ] && eval "export color=\"\$$2\""
    printf "$color $1"
}

color_reset(){ printf '\033[0;37m';}

yesnoprompt(){
	old_stty_cfg=$(stty -g)
	stty raw -echo ; answer=$(head -c 1)
	stty $old_stty_cfg
	echo "$answer" | grep -iq "^y"
}

update() {
	pprint "\n\nUpdating package list.. "
	sudo apt update 2>&1 | grep "can be upgraded" &>/dev/null
	if [ $? -eq 0 ]; then
		pprint "UPDATE AVAILABLE" "cgreen"
		pprint "\n\nDo you want to automatically upgrade (y/n)?"
		if yesnoprompt; then
			pprint "\n\nUpgrading packages.. "
			sudo apt upgrade -y &>/dev/null &&
			pprint "DONE!\n\n" "cgreen" || (pprint "FAIL.\n\n" "cred"; exit 1)
		else
			echo
		fi
	else
		pprint "ALREADY UP TO DATE\n\n" "cgreen"
	fi
}

packages(){
	if ! command -v pip &>/dev/null; then
		pprint "pip tidak terinstall, installing.. "
		sudo apt install python3-pip -y 2>pypilog.txt 1>/dev/null &&
		pprint "Berhasil install pip.\n\n" "cgreen" || (pprint "Gagal install pip.\n\n" "cred"; exit 1)
	fi

	if ! command -v ffmpeg &>/dev/null; then
		pprint "ffmpeg tidak ditemukan, memulai install ffmpeg.. "
		if sudo apt install ffmpeg -y &>/dev/null;then
			pprint "Berhasil install ffmpeg.\n\n" "cgreen"
		else
			pprint "Gagal install ffmpeg.\n\n" "cred"
			pprint "Anda harus menginstall ffmpeg secara manual untuk bisa menggunakan Geez Pyro, exiting..\n" "cblue"
			exit 1
		fi
	fi

	# Check ffmpeg version and warn user if necessary.
	fv=$(grep -Po 'version (3.*?) ' <<< $(ffmpeg -version)) &&
	pprint "Music player tidak bisa berjalan di versi $fv, diperlukan ffmpeg versi 4+.\n" "cblue"
}


node(){
	command -v npm &>/dev/null && return
	pprint "Intaling Nodejs and Npm..  "
	curl -fssL https://deb.nodesource.com/setup_18.x | sudo -E bash - &>nodelog.txt &&
	sudo apt install nodejs -y &>>nodelog.txt &&
	sudo npm i -g npm &>>nodelog.txt &&
	pprint "Berhasil install Nodejs!\n" "cgreen" || (pprint "Gagal install Nodejs.\n" "cred"; exit 1)
}


repo(){
	# Get git repo if the installer is runned standalone
	[[ ! "Rose-Userbot" == $(basename -s .git `git config --get remote.origin.url`) ]]
}


installation(){
	pprint "\n\nUpgrading pip and installing dependency packages.. "
	pip install -U -r requirements.txt &>>pypilog.txt &&
	pprint "Berhasil menginstall requirements.\n" "cgreen" && return
	pprint "Gagal menginstall requirements.\n" "cred"
	exit 1
}

clear
pprint "Welcome to Rose-Userbot Setup Installer\n\n"
pprint "Jika anda menemukan error selama setup, cek logs: "
pprint "\n node js errors , Cek nodelog.txt"
pprint "\npypi packages errors , Cek pypilog.txt"
sleep 1
pprint "\n\nSudo akan digunakan selama proses setup.\n"
sudo test

update
packages
node
repo
installation
pprint "\n\n\n\n\nSetup Rose-Userbot berhasil!" "cgreen"
sleep 1
clear

pprint "\nMasukan Vars berikut ini:\n\n\n"
pprint "\nBOT TOKEN: "; color_reset; read bot_token
pprint "\nMONGO URL: "; color_reset; read mongo_db
pprint "\nPYROGRAM STRING SESSION V2: "; color_reset; read string_session
pprint "\nOWNER ID:"; color_reset; read ownid

pprint "\n\nMemproses Vars...!" "cgreen"

if [ -f .env ]; then
	rm .env
fi

echo """
BOT_TOKEN = $bot_token
MONGO_URL = $mongo_db
STRING_SESSION = $string_session
OWNER_ID = $ownid""" > .env
clear
pprint "\n\n\nVars berhasil disave!, silahkan memulai Rose-Userbot dengan mengetik bash start!"
pprint "\n\n\nGunakan nano .env untuk menambahkan atau merubah vars"
pprint "\nRose-Userbot\n\n"
